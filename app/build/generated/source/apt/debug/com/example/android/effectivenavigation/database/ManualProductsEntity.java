// Generated file do not edit, generated by io.requery.processor.EntityProcessor
package com.example.android.effectivenavigation.database;

import io.requery.Persistable;
import io.requery.meta.AttributeBuilder;
import io.requery.meta.QueryAttribute;
import io.requery.meta.Type;
import io.requery.meta.TypeBuilder;
import io.requery.proxy.BooleanProperty;
import io.requery.proxy.EntityProxy;
import io.requery.proxy.IntProperty;
import io.requery.proxy.Property;
import io.requery.proxy.PropertyState;
import io.requery.util.function.Function;
import io.requery.util.function.Supplier;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;

public class ManualProductsEntity implements ManualProducts, Persistable {
    public static final QueryAttribute<ManualProductsEntity, Integer> ID = 
    new AttributeBuilder<ManualProductsEntity, Integer>("id", int.class)
    .setProperty(new IntProperty<ManualProductsEntity>() {
        @Override
        public Integer get(ManualProductsEntity entity) {
            return entity.id;
        }

        @Override
        public void set(ManualProductsEntity entity, Integer value) {
            entity.id = value;
        }

        @Override
        public int getInt(ManualProductsEntity entity) {
            return entity.id;
        }

        @Override
        public void setInt(ManualProductsEntity entity, int value) {
            entity.id = value;
        }
    })
    .setPropertyName("getId")
    .setPropertyState(new Property<ManualProductsEntity, PropertyState>() {
        @Override
        public PropertyState get(ManualProductsEntity entity) {
            return entity.$id_state;
        }

        @Override
        public void set(ManualProductsEntity entity, PropertyState value) {
            entity.$id_state = value;
        }
    })
    .setKey(true)
    .setGenerated(true)
    .setLazy(false)
    .setNullable(false)
    .setUnique(false)
    .build();

    public static final QueryAttribute<ManualProductsEntity, String> BARCODE_NO = 
    new AttributeBuilder<ManualProductsEntity, String>("barcode_No", String.class)
    .setProperty(new Property<ManualProductsEntity, String>() {
        @Override
        public String get(ManualProductsEntity entity) {
            return entity.barcode_No;
        }

        @Override
        public void set(ManualProductsEntity entity, String value) {
            entity.barcode_No = value;
        }
    })
    .setPropertyName("getBarcode_No")
    .setPropertyState(new Property<ManualProductsEntity, PropertyState>() {
        @Override
        public PropertyState get(ManualProductsEntity entity) {
            return entity.$barcode_No_state;
        }

        @Override
        public void set(ManualProductsEntity entity, PropertyState value) {
            entity.$barcode_No_state = value;
        }
    })
    .setGenerated(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .build();

    public static final QueryAttribute<ManualProductsEntity, Double> PRICE = 
    new AttributeBuilder<ManualProductsEntity, Double>("price", Double.class)
    .setProperty(new Property<ManualProductsEntity, Double>() {
        @Override
        public Double get(ManualProductsEntity entity) {
            return entity.price;
        }

        @Override
        public void set(ManualProductsEntity entity, Double value) {
            entity.price = value;
        }
    })
    .setPropertyName("getPrice")
    .setPropertyState(new Property<ManualProductsEntity, PropertyState>() {
        @Override
        public PropertyState get(ManualProductsEntity entity) {
            return entity.$price_state;
        }

        @Override
        public void set(ManualProductsEntity entity, PropertyState value) {
            entity.$price_state = value;
        }
    })
    .setGenerated(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .build();

    public static final QueryAttribute<ManualProductsEntity, String> PRODUCT_DESCRIPTION = 
    new AttributeBuilder<ManualProductsEntity, String>("productDescription", String.class)
    .setProperty(new Property<ManualProductsEntity, String>() {
        @Override
        public String get(ManualProductsEntity entity) {
            return entity.productDescription;
        }

        @Override
        public void set(ManualProductsEntity entity, String value) {
            entity.productDescription = value;
        }
    })
    .setPropertyName("getProductDescription")
    .setPropertyState(new Property<ManualProductsEntity, PropertyState>() {
        @Override
        public PropertyState get(ManualProductsEntity entity) {
            return entity.$productDescription_state;
        }

        @Override
        public void set(ManualProductsEntity entity, PropertyState value) {
            entity.$productDescription_state = value;
        }
    })
    .setGenerated(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .build();

    public static final QueryAttribute<ManualProductsEntity, Boolean> SYNC_STATUS = 
    new AttributeBuilder<ManualProductsEntity, Boolean>("syncStatus", boolean.class)
    .setProperty(new BooleanProperty<ManualProductsEntity>() {
        @Override
        public Boolean get(ManualProductsEntity entity) {
            return entity.syncStatus;
        }

        @Override
        public void set(ManualProductsEntity entity, Boolean value) {
            entity.syncStatus = value;
        }

        @Override
        public boolean getBoolean(ManualProductsEntity entity) {
            return entity.syncStatus;
        }

        @Override
        public void setBoolean(ManualProductsEntity entity, boolean value) {
            entity.syncStatus = value;
        }
    })
    .setPropertyName("getSyncStatus")
    .setPropertyState(new Property<ManualProductsEntity, PropertyState>() {
        @Override
        public PropertyState get(ManualProductsEntity entity) {
            return entity.$syncStatus_state;
        }

        @Override
        public void set(ManualProductsEntity entity, PropertyState value) {
            entity.$syncStatus_state = value;
        }
    })
    .setGenerated(false)
    .setLazy(false)
    .setNullable(false)
    .setUnique(false)
    .build();

    public static final QueryAttribute<ManualProductsEntity, Integer> TAX = 
    new AttributeBuilder<ManualProductsEntity, Integer>("tax", int.class)
    .setProperty(new IntProperty<ManualProductsEntity>() {
        @Override
        public Integer get(ManualProductsEntity entity) {
            return entity.tax;
        }

        @Override
        public void set(ManualProductsEntity entity, Integer value) {
            entity.tax = value;
        }

        @Override
        public int getInt(ManualProductsEntity entity) {
            return entity.tax;
        }

        @Override
        public void setInt(ManualProductsEntity entity, int value) {
            entity.tax = value;
        }
    })
    .setPropertyName("getTax")
    .setPropertyState(new Property<ManualProductsEntity, PropertyState>() {
        @Override
        public PropertyState get(ManualProductsEntity entity) {
            return entity.$tax_state;
        }

        @Override
        public void set(ManualProductsEntity entity, PropertyState value) {
            entity.$tax_state = value;
        }
    })
    .setGenerated(false)
    .setLazy(false)
    .setNullable(false)
    .setUnique(false)
    .build();

    public static final Type<ManualProductsEntity> $TYPE = new TypeBuilder<ManualProductsEntity>(ManualProductsEntity.class, "ManualProducts")
    .setBaseType(ManualProducts.class)
    .setCacheable(true)
    .setImmutable(false)
    .setReadOnly(false)
    .setStateless(false)
    .setView(false)
    .setFactory(new Supplier<ManualProductsEntity>() {
        @Override
        public ManualProductsEntity get() {
            return new ManualProductsEntity();
        }
    })
    .setProxyProvider(new Function<ManualProductsEntity, EntityProxy<ManualProductsEntity>>() {
        @Override
        public EntityProxy<ManualProductsEntity> apply(ManualProductsEntity entity) {
            return entity.$proxy;
        }
    })
    .addAttribute(PRODUCT_DESCRIPTION)
    .addAttribute(SYNC_STATUS)
    .addAttribute(PRICE)
    .addAttribute(TAX)
    .addAttribute(ID)
    .addAttribute(BARCODE_NO)
    .build();

    private PropertyState $id_state;

    private PropertyState $barcode_No_state;

    private PropertyState $price_state;

    private PropertyState $productDescription_state;

    private PropertyState $syncStatus_state;

    private PropertyState $tax_state;

    private int id;

    private String barcode_No;

    private Double price;

    private String productDescription;

    private boolean syncStatus;

    private int tax;

    private final transient EntityProxy<ManualProductsEntity> $proxy = new EntityProxy<ManualProductsEntity>(this, $TYPE);

    public ManualProductsEntity() {
    }

    @Override
    public int getId() {
        return $proxy.get(ID);
    }

    @Override
    public String getBarcode_No() {
        return $proxy.get(BARCODE_NO);
    }

    public void setBarcode_No(String barcode_No) {
        $proxy.set(BARCODE_NO, barcode_No);
    }

    @Override
    public Double getPrice() {
        return $proxy.get(PRICE);
    }

    public void setPrice(Double price) {
        $proxy.set(PRICE, price);
    }

    @Override
    public String getProductDescription() {
        return $proxy.get(PRODUCT_DESCRIPTION);
    }

    public void setProductDescription(String productDescription) {
        $proxy.set(PRODUCT_DESCRIPTION, productDescription);
    }

    @Override
    public boolean getSyncStatus() {
        return $proxy.get(SYNC_STATUS);
    }

    public void setSyncStatus(boolean syncStatus) {
        $proxy.set(SYNC_STATUS, syncStatus);
    }

    @Override
    public int getTax() {
        return $proxy.get(TAX);
    }

    public void setTax(int tax) {
        $proxy.set(TAX, tax);
    }

    @Override
    public boolean equals(Object obj) {
        return obj instanceof ManualProductsEntity && ((ManualProductsEntity)obj).$proxy.equals(this.$proxy);
    }

    @Override
    public int hashCode() {
        return $proxy.hashCode();
    }

    @Override
    public String toString() {
        return $proxy.toString();
    }
}
